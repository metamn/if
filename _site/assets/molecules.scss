
/* Settings for long text content like articles, blog posts
*/
@mixin body-text {
  max-width: $body-text-width; 
  line-height: $line-height-body-text;
}


/* The default settings for the entire theme
*/
@mixin default-settings {
  @include fluid-image;
  @include link;
  @include default-typography-settings;
  @include font-body;
  
  background: $background;
  color: $color;
}



/* A responsive grid
*/
@mixin responsive-grid($how-many, $maximum : 10) {
  @include below-and-tablet {
    @include col(100%, 0);
  }
  
  @include small-screen {
    @include grid(2, $maximum);
  }
  
  @include normal-screen-and-above {
    @include grid($how-many, $maximum);
  }
}


/* Generates a full grid of $how-many columns and $maximum elements
  - calculates automatically the columns size and margin
  - the right margin of the last element in a row is set to zero
  - $maximum sets how many articles will be displayed on a single page 
*/
@mixin grid($how-many, $maximum) {
  $gutter: col-gutter($how-many);
  $width: col-width($how-many);
  
  @include col($width, $gutter);
  @include col-right-margin($how-many, $gutter, $maximum);
  margin-bottom: $gutter;
}


/* Returns the width of a column in a grid
*/
@function col-width($how-many) {
  @return floor(90% / $how-many);
}

/* Returns the margin of a column in a grid
*/
@function col-gutter($how-many) {
  @return 10% / ($how-many - 1);
}


/* A left aligned column
*/
@mixin col($width, $margin: 0) {
  width: $width;
  margin-right: $margin;
  float: left;
}

/* Remove right margin of the last element in a row of a grid
  - on responsive layouts we setup upd different grids
  - on every grid re-declaration the previous margins of last elements must be removed
*/
@mixin col-right-margin($how-many, $gutter, $maximum) {
  @for $i from 2 through $maximum {
    @if (($how-many != 0) and (($i % $how-many) == 0)) {
      &:nth-of-type(#{$i}) {
         margin-right: 0;
      }
    } @else {
      &:nth-of-type(#{$i}) {
         margin-right: $gutter;
      }
    }
  }
}


/* The width of the content
  - the content is centered with automatic left and right margins
*/
@mixin container {
  width: $container-width;
  padding: 0 $container-margin;
}


/* Adds padding around a grid element
  - the width of the element must be recalculated
*/
@mixin padding($width: 100%) {
  padding: $pad;
  @include grid-resize($width, $pad*2);
}


/* Resize a grid column 
*/
@mixin grid-resize($width, $resize) {
  width: calc(#{$width} - #{$resize})
}


/* Draws a CSS circle around something
*/
@mixin circle($size) {
  width: $size;
  height: $size;
  @include border-radius($size/2);
  border: 1px solid;
  text-align: center;
}


/* An inline list
*/
@mixin list-inline {
  margin: 0;
  
  li {
    display: inline-block;
    float: left;
    margin-right: $pad;
  }
}
